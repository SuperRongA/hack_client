/*
 * FDPClient Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge by LiquidBounce.
 * https://github.com/SkidderMC/FDPClient/
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.features.module.ModuleCategory
import net.ccbluex.liquidbounce.event.EventTarget
import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.event.UpdateEvent
import net.ccbluex.liquidbounce.utils.PacketUtils
import net.ccbluex.liquidbounce.features.value.IntegerValue
import net.minecraft.network.Packet
import net.minecraft.network.play.server.S23PacketBlockChange
import net.minecraft.network.play.INetHandlerPlayClient
import java.util.concurrent.LinkedBlockingQueue

object GhostBlocks : Module(name = "Ghostblocks", category = ModuleCategory.EXPLOIT) {
  
    private val delay = IntegerValue("GhostblockDuration", 1000, 0, 3000)
    
    private val packets = LinkedBlockingQueue<Packet<INetHandlerPlayClient>>()
    private val times = ArrayList<Long>()

    @EventTarget
    fun onPacket(event: PacketEvent) {
        val packet = event.packet
        if (packet is S23PacketBlockChange) {
            event.cancelEvent()
            times.add(System.currentTimeMillis())
            packets.add(packet as Packet<INetHandlerPlayClient>)
        }   
    }
    
    @EventTarget
    fun onUpdate(event: UpdateEvent) {
        while (times.first() < System.currentTimeMillis() - delay.get().toLong()) {
            PacketUtils.handlePacket(packets.take() as Packet<INetHandlerPlayClient?>)
            times.remove(times.first())
        }
    }
    
    override fun onEnable() {
        packets.clear()
        times.clear()
    }
    
    override fun onDisable() {
        while (!packets.isEmpty()) {
            PacketUtils.handlePacket(packets.take() as Packet<INetHandlerPlayClient?>)
        }
        times.clear()
    }
}
